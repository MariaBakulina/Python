/* Дан текст, который содержит различные английские буквы и знаки препинания. Вам необходимо найти самую частую букву в тексте. Результатом должна быть буква в нижнем регистре.
При поиске самой частой буквы, регистр не имеет значения, так что при подсчете считайте, что "A" == "a". Убедитесь, что вы не считайте знаки препинания, цифры и пробелы, а только буквы.

Если в тексте две и больше буквы с одинаковой частотой, тогда результатом будет буква, которая идет первой в алфавите. Для примера, "one" содержит "o", "n", "e" по одному разу, так что мы выбираем "e".

Вх. данные: Текст для анализа, как строка.

Вых. данные: Наиболее частая буква, как строка.

Предусловия:
text содержит только ASCII символы.
0 < len(text) ≤ 10^5 */

def checkio(text):
    alphabet=[0]*26
    maxCountLetter = 0
    maxLetter = text[0].lower()
    for i in range(26):#for letter in text:
        for letter in text:#if ord(letter.lower()) > ord('a') - 1 and ord(letter.lower()) < ord('z') + 1 :
            if ord(letter.lower()) > ord('a') - 1 and ord(letter.lower()) < ord('z') + 1 :#for i in range(26):
                if (ord(letter.lower()) - ord('a')) % 26 == i:
                    alphabet[i] = alphabet[i] + 1
                    if (alphabet[i] > maxCountLetter):
                        maxCountLetter = alphabet[i]
                        maxLetter = chr(i + ord('a'))
    return maxLetter 

if __name__ == '__main__':
    #These "asserts" using only for self-checking and not necessary for auto-testing
    checkio("Hello World!");
    assert checkio("Hello World!") == "l", "Hello test"
    assert checkio("How do you do?") == "o", "O is most wanted"
    assert checkio("One") == "e", "All letter only once."
    assert checkio("Oops!") == "o", "Don't forget about lower case."
    assert checkio("AAaooo!!!!") == "a", "Only letters."
    assert checkio("abe") == "a", "The First."
    assert checkio("a" * 9000 + "b" * 1000) == "a", "Long."
